best {
  data_dir = ./data/  # Edit this
  language = english
  from_tf = False
  positional_mapping_type = repeated
  model_singletons = False
  filter_singletons = False
  mask_singleton_binary_score = False
  separate_singletons = False
  subtract_best_from_singleton = False
  model_mentions = False
  
  eval_parent = False

  max_segment_overlap = False
  filter_overlapping_mentions = False
  eval_cross_segment = False
  filter_long_mentions = False
  max_mention_length = 1
  
  use_old_pretrained_models = False

  solve_empty_nodes = True
  system_empty_nodes = False
  
  zero_shot = False
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/

  use_push_pop_detection = False
  use_crf = False
  crf_decode_during_training = True
  push_pop_decode_during_training = True
  push_pop_only = False
  additional_loss_coef = 100
  
  evaluate_first = False
  max_pred_sentences = 4


  pipeline_parallel = False
  # PEFT
  use_half_precision = False
  use_SGD = False
  use_LORA = False
  use_int8 = False

  final_path = ./output/mbert-final-test2/
  heads_only = False
  add_span_head = False
  span2head = False
  span2head_binary = False
  span2head_fallback = best
  add_dev_to_train = False
  use_cache = False
  use_trees = False
  tree_path_length = 5
  tree_ffnn_size = 200

  # Computation limits.
  max_top_antecedents = 50
  max_training_sentences = 4
  top_span_ratio = 0.4
  max_num_extracted_spans = 3900
  max_num_speakers = 20
  max_segment_len = 256

  # Learning
  bert_learning_rate = 1e-5
  task_learning_rate = 2e-4
  loss_type = marginalized  # {marginalized, hinge}
  mention_loss_coef = 0
  false_new_delta = 1.5  # For loss_type = hinge
  adam_eps = 1e-6
  adam_weight_decay = 1e-2
  warmup_ratio = 0.1
  max_grad_norm = 1  # Set 0 to disable clipping
  gradient_accumulation_steps = 1

  # Model hyperparameters.
  coref_depth = 1  # when 1: no higher order (except for cluster_merging)
  higher_order = attended_antecedent # {attended_antecedent, max_antecedent, entity_equalization, span_clustering, cluster_merging}
  coarse_to_fine = true
  fine_grained = true
  dropout_rate = 0.3
  bert_dropout_rate = 0.1
  ffnn_size = 1000
  ffnn_depth = 1
  cluster_ffnn_size = 1000   # For cluster_merging
  cluster_reduce = mean  # For cluster_merging
  easy_cluster_first = false  # For cluster_merging
  cluster_dloss = false  # cluster_merging
  num_epochs = 24
  feature_emb_size = 20
  max_span_width = 30
  use_metadata = true
  use_features = true
  use_segment_distance = true
  model_heads = true
  use_width_prior = true  # For mention score
  use_distance_prior = true  # For mention-ranking score

  # Other.
  conll_eval_path = ${best.data_dir}/dev.english.v4_gold_conll  # gold_conll file for dev
  conll_test_path = ${best.data_dir}/test.english.v4_gold_conll  # gold_conll file for test
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  # deprels = ["punct", "expl", "<UNK>", "nummod", "flat", "nmod", "aux", "amod", "case", "root", "obl", "dep", "nsubj", "advcl", "obj", "cc", "conj", "iobj", "None", "advmod", "det", "mark", "cop", "parataxis", "ccomp", "acl", "xcomp", "csubj", "appos", "fixed", "orphan", "compound", "discourse", "vocative", "list", "dislocated", "goeswith", "reparandum", None]
  # deprels = ["punct", "expl", "<UNK>", "nummod", "flat", "nmod", "aux", "amod", "case", "root", "obl", "dep", "nsubj", "advcl", "obj", "cc", "conj", "iobj", "None", "advmod", "det", "mark", "cop", "parataxis", "ccomp", "acl", "xcomp", "csubj", "appos", "fixed", "orphan", "compound", "discourse", "vocative", "list", "dislocated", "goeswith", "reparandum", "nmod:ins", "obl:arg:nom", "nmod:gen", "obl:arg:dat", "obl:arg", "obl:arg:oproti", "advcl:pokud", "nmod:nom", "advcl:když_že", "obl:arg:acc", "obl:arg:s:acc", "advcl:že", "obl:nom", "advcl:protože", "obl:arg:ins", "nmod:acc", "nmod:loc", "obl:gen", "advcl:zatímco", "obl:loc", "nmod:dat", "obl:v:loc", "obl:ins", "advcl:co", "obl:arg:gen", "acl:relcl", "advcl:než", "acl:zda", "advcl:takže", "obl:dat", "obl:acc", "acl:že", "advcl:aby", "csubj:pass", "advcl:když", "obl:díky:dat", "obl:arg:loc", "acl:aby", "aux:pass", "conj:as_well_as", "conj:and", "advcl:with", "conj:or", "advcl:than", "nmod:jako", "advcl:až", "nsubj:pass", "advcl:jakmile", "case:of", "advcl:that", "obl:on", "advcl:přestože"]
  # deprels = ["punct", "expl", "<UNK>", "nummod", "flat", "nmod", "aux", "amod", "case", "root", "obl", "dep", "nsubj", "advcl", "obj", "cc", "conj", "iobj", "None", "advmod", "det", "mark", "cop", "parataxis", "ccomp", "acl", "xcomp", "csubj", "appos", "fixed", "orphan", "compound", "discourse", "vocative", "list", "dislocated", "goeswith", "reparandum", "nmod:ins", "obl:arg:nom", "nmod:gen", "obl:arg:dat", "obl:arg", "obl:arg:oproti", "advcl:pokud", "nmod:nom", "advcl:když_že", "obl:arg:acc", "obl:arg:s:acc", "advcl:že", "obl:nom", "advcl:protože", "obl:arg:ins", "nmod:acc", "nmod:loc", "obl:gen", "advcl:zatímco", "obl:loc", "nmod:dat", "obl:v:loc", "obl:ins", "advcl:co", "obl:arg:gen", "acl:relcl", "advcl:než", "acl:zda", "advcl:takže", "obl:dat", "obl:acc", "acl:že", "advcl:aby", "csubj:pass", "advcl:když", "obl:díky:dat", "obl:arg:loc", "acl:aby", "aux:pass", "conj:as_well_as", "conj:and", "advcl:with", "conj:or", "advcl:than", "nmod:jako", "advcl:až", "nsubj:pass", "advcl:jakmile", "case:of", "advcl:that", "obl:on", "advcl:přestože", "obl:agent:ins", "nsubj:xsubj", "nsubj:pass:xsubj"]
  # deprels = ["punct", "expl", "<UNK>", "nummod", "flat", "nmod", "aux", "amod", "case", "root", "obl", "dep", "nsubj", "advcl", "obj", "cc", "conj", "iobj", "None", "advmod", "det", "mark", "cop", "parataxis", "ccomp", "acl", "xcomp", "csubj", "appos", "fixed", "orphan", "compound", "discourse", "vocative", "list", "dislocated", "goeswith", "reparandum", "nmod:ins", "obl:arg:nom", "nmod:gen", "obl:arg:dat", "obl:arg", "obl:arg:oproti", "advcl:pokud", "nmod:nom", "advcl:když_že", "obl:arg:acc", "obl:arg:s:acc", "advcl:že", "obl:nom", "advcl:protože", "obl:arg:ins", "nmod:acc", "nmod:loc", "obl:gen", "advcl:zatímco", "obl:loc", "nmod:dat", "obl:v:loc", "obl:ins", "advcl:co", "obl:arg:gen", "acl:relcl", "advcl:než", "acl:zda", "advcl:takže", "obl:dat", "obl:acc", "acl:že", "advcl:aby", "csubj:pass", "advcl:když", "obl:díky:dat", "obl:arg:loc", "acl:aby", "aux:pass", "conj:as_well_as", "conj:and", "advcl:with", "conj:or", "advcl:than", "nmod:jako", "advcl:až", "nsubj:pass", "advcl:jakmile", "case:of", "advcl:that", "obl:on", "advcl:přestože", "obl:agent:ins", "nsubj:xsubj", "nsubj:pass:xsubj", "clf"]
  deprels = ["punct", "expl", "<UNK>", "nummod", "flat", "nmod", "aux", "amod", "case", "root", "obl", "dep", "nsubj", "advcl", "obj", "cc", "conj", "iobj", "None", "advmod", "det", "mark", "cop", "parataxis", "ccomp", "acl", "xcomp", "csubj", "appos", "fixed", "orphan", "compound", "discourse", "vocative", "list", "dislocated", "goeswith", "reparandum", "nmod:ins", "obl:arg:nom", "nmod:gen", "obl:arg:dat", "obl:arg", "obl:arg:oproti", "advcl:pokud", "nmod:nom", "advcl:když_že", "obl:arg:acc", "obl:arg:s:acc", "advcl:že", "obl:nom", "advcl:protože", "obl:arg:ins", "nmod:acc", "nmod:loc", "obl:gen", "advcl:zatímco", "obl:loc", "nmod:dat", "obl:v:loc", "obl:ins", "advcl:co", "obl:arg:gen", "acl:relcl", "advcl:než", "acl:zda", "advcl:takže", "obl:dat", "obl:acc", "acl:že", "advcl:aby", "csubj:pass", "advcl:když", "obl:díky:dat", "obl:arg:loc", "acl:aby", "aux:pass", "conj:as_well_as", "conj:and", "advcl:with", "conj:or", "advcl:than", "nmod:jako", "advcl:až", "nsubj:pass", "advcl:jakmile", "case:of", "advcl:that", "obl:on", "advcl:přestože", "obl:agent:ins", "nsubj:xsubj", "nsubj:pass:xsubj", "clf"]
  instructions = ["-100", "0", "1", "1,POP:1", "0,PUSH", "1,PUSH,POP:1", "0,PUSH,POP:1", "2,POP:1", "2,POP:1,POP:1", "0,PUSH,PUSH,POP:1", "1,PUSH", "2,PUSH,POP:1", "2", "3,POP:1", "2,PUSH", "1,POP:1,PUSH,POP:1", "0,PUSH,PUSH", "3", "3,POP:1,POP:1,POP:1", "2,POP:1,PUSH,POP:1", "1,PUSH,PUSH,POP:1", "3,PUSH", "4", "4,POP:1", "3,PUSH,POP:1", "4,POP:1,POP:1,POP:1,POP:1", "3,POP:1,POP:1", "1,PUSH,PUSH", "4,POP:1,POP:1", "2,PUSH,PUSH", "4,PUSH,PUSH,POP:1", "5,POP:1", "5", "4,PUSH", "2,PUSH,PUSH,POP:1", "0,PUSH,PUSH,PUSH", "5,POP:1,POP:1", "2,POP:1,POP:1,PUSH,POP:1", "5,POP:1,POP:1,POP:1,POP:1", "3,PUSH,PUSH,POP:1", "4,PUSH,POP:1", "4,POP:1,POP:1,POP:1", "5,POP:1,POP:1,POP:1,POP:1,POP:1", "0,PUSH,PUSH,PUSH,POP:1", "3,POP:1,POP:1,PUSH,POP:1", "3,POP:1,POP:1,POP:1,PUSH,POP:1", "3,PUSH,PUSH", "6,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "5,PUSH", "6,PUSH,POP:1", "6", "3,POP:1,PUSH,POP:1", "1,PUSH,PUSH,PUSH,POP:1", "1,PUSH,PUSH,PUSH", "5,POP:1,POP:1,POP:1", "4,POP:1,POP:1,POP:1,PUSH,POP:1", "7", "7,PUSH", "8", "5,PUSH,PUSH,POP:1", "6,PUSH", "8,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "4,PUSH,PUSH", "6,POP:1", "2,PUSH,PUSH,PUSH", "4,POP:1,PUSH,POP:1", "7,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "6,PUSH,PUSH", "7,POP:1", "8,POP:1", "0,PUSH,PUSH,PUSH,PUSH", "6,POP:1,POP:1,POP:1,POP:1,POP:1", "5,PUSH,PUSH", "5,PUSH,POP:1", "4,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "3,PUSH,PUSH,PUSH,POP:1", "4,POP:1,POP:1,PUSH,POP:1", "5,POP:1,PUSH,POP:1", "5,POP:1,POP:2,POP:2,POP:2", "6,POP:1,POP:1,POP:1", "0,PUSH,PUSH,PUSH,PUSH,POP:1", "2,POP:2", "8,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "10,POP:1,POP:1", "8,PUSH", "7,PUSH,POP:1", "9,PUSH", "9", "8,PUSH,POP:1", "9,POP:1,PUSH,POP:1", "6,POP:1,POP:1,POP:1,POP:1", "4,POP:1,POP:1,POP:2", "5,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "6,POP:1,POP:1", "9,POP:1,POP:1,POP:1,POP:1,POP:1", "6,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "7,POP:1,POP:1,POP:1", "6,POP:1,POP:2,POP:1", "5,POP:1,POP:1,PUSH,POP:1", "7,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "7,POP:1,POP:1", "5,POP:1,POP:1,POP:2,POP:1", "3,POP:1,POP:2", "5,POP:1,POP:1,POP:1,PUSH,POP:1", "5,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "2,PUSH,PUSH,PUSH,POP:1", "2,POP:2,PUSH,POP:1", "7,POP:1,POP:1,POP:1,POP:1", "9,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "8,POP:1,POP:1,POP:1,POP:1", "10,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "10", "11,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "9,POP:1,POP:1,POP:1,POP:1", "10,PUSH", "6,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "7,POP:1,POP:1,POP:2", "7,POP:1,POP:1,POP:1,POP:1,POP:1", "8,POP:1,PUSH,POP:1", "9,POP:1,POP:1,PUSH,POP:1", "6,PUSH,PUSH,POP:1", "11,POP:1,POP:1,PUSH,POP:1", "10,POP:1,PUSH,POP:1", "11", "10,POP:1", "8,PUSH,PUSH,POP:1", "11,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "6,POP:1,POP:1,POP:1,POP:2,POP:1", "3,POP:3", "4,POP:2,PUSH,POP:1", "4,POP:1,POP:1,POP:2,PUSH,POP:1", "10,POP:1,POP:1,POP:1,POP:1,POP:1", "8,PUSH,PUSH", "5,POP:2,POP:2,POP:1", "3,PUSH,PUSH,PUSH", "4,POP:1,POP:2,PUSH,POP:1", "5,POP:1,POP:1,POP:1,POP:2", "4,POP:1,POP:2,POP:2", "8,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "6,POP:1,PUSH,POP:1", "3,POP:2,POP:2", "6,POP:1,POP:1,POP:1,PUSH,POP:1", "4,POP:1,POP:2", "8,POP:1,POP:1", "8,POP:1,POP:2,POP:1", "3,POP:2,POP:1", "6,POP:1,POP:1,POP:2,POP:1", "5,POP:1,POP:1,POP:2,POP:2", "7,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "8,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "8,POP:1,POP:1,POP:1,POP:1,POP:1", "7,PUSH,PUSH", "9,POP:1,POP:1,POP:1,PUSH,POP:1", "9,POP:1", "8,POP:1,POP:1,PUSH,POP:1", "6,POP:1,POP:1,POP:2", "3,POP:2,PUSH,POP:1", "10,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "10,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:2,POP:1", "2,POP:1,PUSH,PUSH,POP:1", "4,POP:1,POP:3,PUSH,POP:1", "5,POP:1,POP:2,POP:2", "12", "11,PUSH", "12,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "7,PUSH,PUSH,PUSH,POP:1", "4,PUSH,PUSH,PUSH,POP:1", "3,POP:3,PUSH,POP:1", "5,POP:1,POP:2", "8,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "7,PUSH,PUSH,POP:1", "0,PUSH,PUSH,PUSH,PUSH,PUSH", "3,POP:2", "4,PUSH,PUSH,PUSH,PUSH", "8,POP:1,POP:1,POP:1", "9,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "1,PUSH,PUSH,PUSH,PUSH", "4,POP:2,POP:1", "1,POP:1,PUSH", "6,POP:1,POP:1,PUSH,POP:1", "6,PUSH,PUSH,PUSH", "8,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "2,POP:1,PUSH", "6,PUSH,PUSH,PUSH,POP:1", "7,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "6,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "5,POP:1,POP:1,POP:2", "11,POP:1,POP:1", "7,POP:1,PUSH,POP:1", "4,POP:2", "5,POP:1,POP:1,POP:3", "3,PUSH,PUSH,PUSH,PUSH,POP:1", "5,POP:3,POP:1", "9,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1", "1,PUSH,PUSH,PUSH,PUSH,POP:1", "5,POP:4", "5,POP:1,PUSH", "4,POP:1,POP:2,POP:1", "5,POP:2", "4,PUSH,PUSH,PUSH", "4,POP:3,POP:1", "5,POP:2,POP:1", "3,PUSH,PUSH,PUSH,PUSH", "2,PUSH,PUSH,PUSH,PUSH", "6,POP:1,POP:3", "6,POP:1,POP:1,POP:1,POP:3,PUSH,POP:1", "3,POP:1,POP:2,PUSH,POP:1", "6,POP:3,PUSH", "9,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,PUSH,POP:1", "9,POP:1,POP:1,POP:1,POP:1,POP:1,POP:1,POP:2"]
  eval_frequency = 1000
  report_frequency = 100
  log_root = ${best.data_dir}
}

bert_base = ${best}{
  num_docs = 2802
  bert_learning_rate = 1e-05
  task_learning_rate = 2e-4
  max_segment_len = 512
  ffnn_size = 3000
  cluster_ffnn_size = 3000
  max_training_sentences = 4
  bert_tokenizer_name = bert-base-cased
  bert_pretrained_name_or_path = bert-base-cased
}

train_bert_base = ${bert_base}{

}

train_mbert_base = ${train_bert_base}{
  data_dir = ./data/mBERT/
  bert_tokenizer_name = bert-base-multilingual-cased
  bert_pretrained_name_or_path = bert-base-multilingual-cased
}

train_mbert_joined = ${train_bert_base}{
  data_dir = ./data/UD
  num_docs = 6797
  bert_tokenizer_name = bert-base-multilingual-cased
  bert_pretrained_name_or_path = bert-base-multilingual-cased
  language = joined
  conll_eval_path = ./data/UD/dev.catalan.conllu
}

train_mbert_joined_filtered = ${train_mbert_joined}{
  conll_eval_path = ./data/UD/dev.joined.filtered.conllu
  conll_test_path = ["./data/UD/test.catalan.filtered.conllu", "./data/UD/test.german.filtered.conllu", "./data/UD/test.spanish.filtered.conllu", "./data/UD/test.czech.filtered.conllu", "./data/UD/test.russian.filtered.conllu", "./data/UD/test.polish.filtered.conllu", "./data/UD/test.joined.filtered.conllu"]
}

train_mbert_slavic = ${train_bert_base}{
  max_training_sentences = 4
  bert_learning_rate = 1e-05
  task_learning_rate = 2e-4
  data_dir = ./data/UD
  num_docs = 4138
  bert_tokenizer_name = bert-base-multilingual-cased
  bert_pretrained_name_or_path = bert-base-multilingual-cased
  language = joined
  conll_eval_path = ./data/UD/slavic/dev.polish.conllu
}

train_mbert_czech = ${train_mbert_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/
  language = cs_pdt-corefud
  num_docs = 2532
  num_epochs = 30
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-test.conllu
}

train_mbert_czech_from_joined = ${train_mbert_czech}{
  load_model_from_exp = train_mbert_multi_slavic
}

train_mbert_czech-pcedt = ${train_mbert_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/
  language = cs_pcedt-corefud
  num_docs = 2532
  num_epochs = 30
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-test.conllu
}

train_mbert_czech-pcedt_from_joined = ${train_mbert_czech-pcedt}{
  load_model_from_exp = train_mbert_multi_slavic
}

train_mbert_multi_czech = ${train_mbert_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Czech/
  joined_languages = [cs_pcedt-corefud, cs_pdt-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/]
  language = cs-corefud
  num_epochs = 20
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu]
}

train_mbert_russian = ${train_mbert_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/
  language = ru_rucor-corefud
  num_docs = 144
  num_epochs = 500
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-test.conllu
}

train_mbert_russian_from_joined = ${train_mbert_russian}{
  load_model_from_exp = train_mbert_multi_slavic
}

train_mbert_polish = ${train_mbert_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/
  language = pl_pcc-corefud
  num_docs = 1462
  num_epochs = 60
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-test.conllu
}

train_mbert_polish_from_joined = ${train_mbert_polish}{
  load_model_from_exp = train_mbert_multi_slavic
}

train_mbert_multi_slavic = ${train_mbert_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Slavic/
  joined_languages = [cs_pcedt-corefud, cs_pdt-corefud, ru_rucor-corefud, pl_pcc-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/]
  language = slavic-corefud
  num_epochs = 15
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu]
}

train_mbert_spanish = ${train_mbert_joined}{
  bert_learning_rate = 1e-05
  task_learning_rate = 2e-4
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/
  language = es_ancora-corefud
  num_docs = 1311
  num_epochs = 60
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-test.conllu
}

train_mbert_spanish_from_joined = ${train_mbert_spanish}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_catalan = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/
  language = ca_ancora-corefud
  num_docs = 1207
  num_epochs = 60
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-test.conllu
}

train_mbert_catalan_from_joined = ${train_mbert_catalan}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_multi_ancora = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-AnCora/
  joined_languages = [es_ancora-corefud, ca_ancora-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/]
  language = ancora-corefud
  num_epochs = 40
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu]
}

train_mbert_german = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/
  language = de_potsdamcc-corefud
  num_docs = 141
  num_epochs = 1000
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-test.conllu
}

train_mbert_german_from_joined = ${train_mbert_german}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_german-parcor = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/
  language = de_parcorfull-corefud
  num_docs = 141
  num_epochs = 5000
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-test.conllu
}

train_mbert_german-parcor_from_joined = ${train_mbert_german-parcor}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_french = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/
  language = fr_democrat-corefud
  num_docs = 49
  num_epochs = 1000
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-test.conllu
}

train_mbert_french_from_joined = ${train_mbert_french}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_hungarian-korkor = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/
  language = hu_korkor-corefud
  num_docs = 49
  num_epochs = 500
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-test.conllu
}

train_mbert_hungarian-korkor_from_joined = ${train_mbert_hungarian-korkor}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_hungarian = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/
  language = hu_szegedkoref-corefud
  num_docs = 49
  num_epochs = 100
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-test.conllu
}

train_mbert_hungarian_from_joined = ${train_mbert_hungarian}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_lithuanian = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/
  language = lt_lcc-corefud
  num_docs = 49
  num_epochs = 1000
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-test.conllu
}

train_mbert_lithuanian_from_joined = ${train_mbert_lithuanian}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_english-gum = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/
  language = en_gum-corefud
  num_docs = 49
  num_epochs = 500
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-test.conllu
}

train_debug_english-gum = ${train_mbert_english-gum}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/debug/
  bert_tokenizer_name = google/electra-small-discriminator
  bert_pretrained_name_or_path = google/electra-small-discriminator
  max_segment_len = 32
  max_training_sentences = 4
  eval_frequency = 800
}

train_mbert_english-gum_from_joined = ${train_mbert_english-gum}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_english-parcor = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/
  language = en_parcorfull-corefud
  num_docs = 49
  num_epochs = 5000
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-test.conllu
}

train_mbert_english-parcor_from_joined = ${train_mbert_english-parcor}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_multi_parcor = ${train_mbert_english-parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-ParCorFull/
  joined_languages = [de_parcorfull-corefud, en_parcorfull-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/]
  language = parcor-corefud
  num_epochs = 500
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu]
}


train_mbert_turkish = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/
  language = tr_itcc-corefud
  num_docs = 49
  num_epochs = 1000
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-test.conllu
}

train_mbert_turkish_from_joined = ${train_mbert_turkish}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_norwegian-bokmaal = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/
  language = no_bokmaalnarc-corefud
  num_docs = 49
  num_epochs = 200
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-test.conllu
}

train_mbert_norwegian-bokmaal_from_joined = ${train_mbert_norwegian-bokmaal}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_norwegian-nynorsk = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/
  language = no_nynorsknarc-corefud
  num_docs = 49
  num_epochs = 100
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-test.conllu
}

train_mbert_norwegian-nynorsk_from_joined = ${train_mbert_norwegian-nynorsk}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_hebrew = ${train_mbert_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Ancient_Hebrew-PTNK/
  language = hbo_ptnk-corefud
  num_docs = 49
  num_epochs = 2500
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Ancient_Hebrew-PTNK/hbo_ptnk-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Ancient_Hebrew-PTNK/hbo_ptnk-corefud-test.conllu
}

train_mbert_hebrew_from_joined = ${train_mbert_hebrew}{
  load_model_from_exp = train_mbert_multi_all
}

train_mbert_multi_all = ${train_mbert_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/
  joined_languages = [cs_pcedt-corefud, cs_pdt-corefud, ru_rucor-corefud, pl_pcc-corefud, es_ancora-corefud, ca_ancora-corefud, de_potsdamcc-corefud, de_parcorfull-corefud, fr_democrat-corefud, hu_szegedkoref-corefud, lt_lcc-corefud, en_gum-corefud, en_parcorfull-corefud, hu_korkor-corefud, tr_itcc-corefud, no_narc_bokmaal-corefud, no_narc_nynorsk-corefud, hbo_ptnk-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NARC_Bokmaal/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NARC_Nynorsk/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Ancient_Hebrew-PTNK/]
  language = all-corefud
  num_epochs = 10
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NARC_Bokmaal/no_narc_bokmaal-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NARC_Nynorsk/no_narc_nynorsk-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Ancient_Hebrew-PTNK/hbo_ptnk-corefud-test.conllu]
}



train_xlmr_joined = ${train_bert_base}{
  bert_learning_rate = 1e-06
  task_learning_rate = 2e-5
  data_dir = ./data/UD
  num_docs = 6797
  bert_tokenizer_name = xlm-roberta-large
  bert_pretrained_name_or_path = xlm-roberta-large
  language = joined
  conll_eval_path = ./data/UD/dev.catalan.conllu
}

train_xlmr_slavic = ${train_bert_base}{
  bert_learning_rate = 2e-06
  task_learning_rate = 4e-5
  data_dir = ./data/UD
  num_docs = 4138
  bert_tokenizer_name = xlm-roberta-large
  bert_pretrained_name_or_path = xlm-roberta-large
  language = joined
  conll_eval_path = ./data/UD/slavic/dev.polish.conllu
}

train_xlmr_czech = ${train_xlmr_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/xlmr/
  language = cs_pdt-corefud
  num_docs = 2532
  num_epochs = 40
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-test.conllu
}

train_xlmr_czech_from_joined = ${train_xlmr_czech}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 15
  evaluate_first = True
}

train_xlmr_czech-pcedt = ${train_xlmr_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/xlmr/
  language = cs_pcedt-corefud
  num_docs = 2532
  num_epochs = 40
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-test.conllu
}

train_xlmr_czech-pcedt_from_joined = ${train_xlmr_czech-pcedt}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 15
  evaluate_first = True
}

train_xlmr_multi_czech = ${train_xlmr_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Czech/xlmr/
  joined_languages = [cs_pcedt-corefud, cs_pdt-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/xlmr/]
  language = cs-corefud
  num_epochs = 15
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-test.conllu]
}

train_xlmr_russian = ${train_xlmr_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/xlmr/
  language = ru_rucor-corefud
  num_docs = 144
  num_epochs = 300
  bert_dropout_rate = 0.1
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-test.conllu
}

train_xlmr_russian_from_joined = ${train_xlmr_russian}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 200
  evaluate_first = True
}

train_xlmr_polish = ${train_xlmr_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/xlmr/
  language = pl_pcc-corefud
  num_docs = 1462
  num_epochs = 45
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-test.conllu
}

train_xlmr_polish_from_joined = ${train_xlmr_polish}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 30
  evaluate_first = True
}

train_xlmr_multi_slavic = ${train_xlmr_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Slavic/xlmr/
  joined_languages = [cs_pcedt-corefud, cs_pdt-corefud, ru_rucor-corefud, pl_pcc-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/xlmr/]
  language = slavic-corefud
  num_epochs = 15
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-test.conllu]
}

train_xlmr_spanish = ${train_xlmr_joined}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/xlmr/
  language = es_ancora-corefud
  num_docs = 1311
  num_epochs = 60
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-test.conllu
}

train_xlmr_spanish_from_joined = ${train_xlmr_spanish}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 30
  evaluate_first = True
}

train_xlmr_catalan = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/xlmr/
  language = ca_ancora-corefud
  num_docs = 1207
  num_epochs = 60
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-test.conllu
}

train_xlmr_catalan_from_joined = ${train_xlmr_catalan}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 30
  evaluate_first = True
}

train_xlmr_multi_ancora = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-AnCora/xlmr/
  joined_languages = [es_ancora-corefud, ca_ancora-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/xlmr/]
  language = ancora-corefud
  num_epochs = 40
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-test.conllu]
}

train_xlmr_german = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/xlmr/
  language = de_potsdamcc-corefud
  num_docs = 141
  num_epochs = 1000
  bert_dropout_rate = 0.3
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-test.conllu
}

train_xlmr_german_from_joined = ${train_xlmr_german}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 500
  evaluate_first = True
}

train_xlmr_german-parcor = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/xlmr/
  language = de_parcorfull-corefud
  num_docs = 141
  num_epochs = 5000
  bert_dropout_rate = 0.3
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-test.conllu
}

train_xlmr_german-parcor_from_joined = ${train_xlmr_german-parcor}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 1000
  evaluate_first = True
}

train_xlmr_multi_german = ${train_xlmr_german}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-German/xlmr/
  joined_languages = [de_potsdamcc-corefud, de_parcorfull-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/xlmr/]
  language = german-corefud
  num_epochs = 40
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-test.conllu]
}

train_xlmr_french = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/xlmr/
  language = fr_democrat-corefud
  num_docs = 49
  num_epochs = 1000
  bert_dropout_rate = 0.3
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-test.conllu
}

train_xlmr_french_from_joined = ${train_xlmr_french}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 500
  evaluate_first = True
}

train_xlmr_hungarian-korkor = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/xlmr/
  language = hu_korkor-corefud
  num_docs = 49
  num_epochs = 500
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-test.conllu
}

train_xlmr_hungarian-korkor_from_joined = ${train_xlmr_hungarian-korkor}{
  load_model_from_exp = train_mbert_multi_all
}

train_xlmr_hungarian = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/xlmr/
  language = hu_szegedkoref-corefud
  num_docs = 49
  num_epochs = 300
  bert_dropout_rate = 0.1
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-test.conllu
}

train_xlmr_hungarian_from_joined = ${train_xlmr_hungarian}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 100
  evaluate_first = True
}

train_xlmr_multi_hungarian = ${train_xlmr_hungarian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Hungarian/xlmr/
  joined_languages = [hu_szegedkoref-corefud, hu_korkor-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/xlmr/]
  language = hungarian-corefud
  num_epochs = 40
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-test.conllu]
}

train_xlmr_lithuanian = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/xlmr
  language = lt_lcc-corefud
  num_docs = 49
  num_epochs = 1000
  bert_dropout_rate = 0.3
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-test.conllu
}

train_xlmr_lithuanian_from_joined = ${train_xlmr_lithuanian}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 500
  evaluate_first = True
}

train_xlmr_english-gum = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/xlmr/
  language = en_gum-corefud
  num_docs = 49
  num_epochs = 500
  bert_dropout_rate = 0.3
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-test.conllu
}

train_xlmr_english-gum_from_joined = ${train_xlmr_english-gum}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 150
  evaluate_first = True
}

train_xlmr_english-gum_from_english = ${train_xlmr_english-gum}{
  load_model_from_exp = train_xlmr_multi_english
  num_epochs = 250
  evaluate_first = True
}

train_xlmr_english-parcor = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/xlmr/
  language = en_parcorfull-corefud
  num_docs = 49
  num_epochs = 5000
  bert_dropout_rate = 0.3
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-test.conllu
}

train_xlmr_english-onto = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-OntoNotes/xlmr/
  language = en_ontonotes-corefud
  num_docs = 49
  num_epochs = 500
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-test.conllu
}

train_xlmr_english-parcor_from_joined = ${train_xlmr_english-parcor}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 400
  evaluate_first = True
}

train_xlmr_english-parcor_from_english = ${train_xlmr_english-parcor}{
  load_model_from_exp = train_xlmr_multi_english
  num_epochs = 1000
  evaluate_first = True
}

train_xlmr_multi_english = ${train_xlmr_english-gum}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-English/xlmr/
  joined_languages = [en_gum-corefud, en_parcorfull-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/xlmr/]
  language = english-corefud
  num_epochs = 40
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-test.conllu]
}

train_xlmr_turkish = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/xlmr/
  language = tr_itcc-corefud
  num_docs = 49
  num_epochs = 1000
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-test.conllu
}

train_xlmr_turkish_from_joined = ${train_xlmr_turkish}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 250
  evaluate_first = True
}

train_xlmr_norwegian-bokmaal = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/xlmr/
  language = no_bokmaalnarc-corefud
  num_docs = 49
  num_epochs = 200
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-test.conllu
}

train_xlmr_norwegian-bokmaal_from_joined = ${train_xlmr_norwegian-bokmaal}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 100
  evaluate_first = True
}

train_xlmr_norwegian-nynorsk = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/xlmr/
  language = no_nynorsknarc-corefud
  num_docs = 49
  num_epochs = 100
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-test.conllu
}

train_xlmr_norwegian-nynorsk_from_joined = ${train_xlmr_norwegian-nynorsk}{
  load_model_from_exp = train_xlmr_multi_all
  num_epochs = 50
  evaluate_first = True
}

train_xlmr_multi_norwegian = ${train_xlmr_norwegian-nynorsk}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Norwegian/xlmr/
  joined_languages = [no_bokmaalnarc-corefud, no_nynorsknarc-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/xlmr/]
  language = norwegian-corefud
  num_epochs = 40
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-test.conllu]
}

train_xlmr_hebrew = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Ancient_Hebrew-PTNK/xlmr/
  language = hbo_ptnk-corefud
  num_docs = 49
  num_epochs = 2500
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Ancient_Hebrew-PTNK/hbo_ptnk-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Ancient_Hebrew-PTNK/hbo_ptnk-corefud-test.conllu
}

train_xlmr_hebrew_from_joined = ${train_xlmr_hebrew}{
  load_model_from_exp = train_xlmr_multi_all
  evaluate_first = True
}

train_xlmr_multi_parcor = ${train_xlmr_english-parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-ParCorFull/xlmr/
  joined_languages = [de_parcorfull-corefud, en_parcorfull-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/xlmr/]
  language = parcor-corefud
  num_epochs = 500
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu]
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-test.conllu]
}

train_xlmr_multi_all = ${train_xlmr_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  eval_frequency = 10000
  use_cache = True
  max_segment_overlap = True
  filter_overlapping_mentions = True
  solve_empty_nodes = True
  max_training_sentences = 6

  final_path = ./output/final/xlmr-multi
  joined_languages = [cs_pcedt-corefud, cs_pdt-corefud, ru_rucor-corefud, pl_pcc-corefud, es_ancora-corefud, ca_ancora-corefud, de_potsdamcc-corefud, de_parcorfull-corefud, fr_democrat-corefud, hu_korkor-corefud, hu_szegedkoref-corefud, lt_lcc-corefud, en_gum-corefud, en_parcorfull-corefud, tr_itcc-corefud, no_bokmaalnarc-corefud, no_nynorsknarc-corefud]
  joined_dirs = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/xlmr, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/xlmr/, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/xlmr/]
  language = all-corefud
  num_epochs = 15
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu
  conll_test_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-test.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-test.conllu]
}

eval_xlmr_multi_all = ${train_xlmr_multi_all}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all
}

train_xlmr_multi_all_trees = ${train_xlmr_multi_all}{
  final_path = ./output/final/xlmr-multi-trees
  use_trees = True
}

eval_xlmr_multi_all_trees = ${train_xlmr_multi_all_trees}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_trees
}

train_xlmr_multi_all_span2head = ${train_xlmr_multi_all}{
  final_path = ./output/final/xlmr-multi-span2head
  use_trees = True
  span2head = True
  span2head_binary = True
}

eval_xlmr_multi_all_span2head = ${train_xlmr_multi_all_span2head}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_span2head
}

train_xlmr_multi_all_singletons = ${train_xlmr_multi_all}{
  final_path = ./output/final/xlmr-multi-singletons
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  num_epochs = 12
}

eval_xlmr_multi_all_singletons = ${train_xlmr_multi_all_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_singletons
}

train_xlmr_multi_all_trees_singletons = ${train_xlmr_multi_all_singletons}{
  final_path = ./output/final/xlmr-multi-trees-singletons
  use_trees = True
}

eval_xlmr_multi_all_trees_singletons = ${train_xlmr_multi_all_trees_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_trees_singletons
}

train_xlmr_multi_all_span2head_singletons = ${train_xlmr_multi_all_singletons}{
  final_path = ./output/final/xlmr-multi-span2head-singletons
  use_trees = True
  span2head = True
  span2head_binary = True
}

eval_xlmr_multi_all_span2head_singletons = ${train_xlmr_multi_all_span2head_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_span2head_singletons
}



train_xlmr_multi_all_push_pop = ${train_xlmr_multi_all}{
  final_path = ./output/final/xlmr-multi-push-pop
  use_push_pop_detection = True
  num_epochs = 8
  max_training_sentences = 4
}

eval_xlmr_multi_all_push_pop = ${train_xlmr_multi_all_span2head}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_push_pop
}

train_xlmr_multi_all_trees_push_pop = ${train_xlmr_multi_all}{
  final_path = ./output/final/xlmr-multi-trees-push-pop
  max_training_sentences = 6
  use_trees = True
  use_push_pop_detection = True
}

eval_xlmr_multi_all_trees_push_pop = ${train_xlmr_multi_all_trees_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_trees_push_pop
}

train_xlmr_multi_all_span2head_push_pop = ${train_xlmr_multi_all}{
  final_path = ./output/final/xlmr-multi-span2head-push-pop
  max_training_sentences = 6
  use_trees = True
  span2head = True
  span2head_binary = True
  use_push_pop_detection = True
  num_epochs = 10
}

eval_xlmr_multi_all_span2head_push_pop = ${train_xlmr_multi_all_span2head_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_span2head_push_pop
}

train_xlmr_multi_all_singletons_push_pop = ${train_xlmr_multi_all}{
  max_training_sentences = 3
  num_epochs = 6
  final_path = ./output/final/xlmr-multi-singletons-push-pop
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_push_pop_detection = True
}

eval_xlmr_multi_all_singletons_push_pop = ${train_xlmr_multi_all_singletons_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_singletons_push_pop
}

train_xlmr_multi_all_trees_singletons_push_pop = ${train_xlmr_multi_all_singletons_push_pop}{
  max_training_sentences = 3
  num_epochs = 6
  final_path = ./output/final/xlmr-multi-trees-singletons-push-pop
  use_trees = True
}

eval_xlmr_multi_all_trees_singletons_push_pop = ${train_xlmr_multi_all_trees_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_trees_singletons_push_pop
}

train_xlmr_multi_all_span2head_singletons_push_pop = ${train_xlmr_multi_all_singletons_push_pop}{
  max_training_sentences = 3
  num_epochs = 6
  final_path = ./output/final/xlmr-multi-span2head-singletons-push-pop
  use_trees = True
  span2head = True
  span2head_binary = True
}

eval_xlmr_multi_all_span2head_singletons_push_pop = ${train_xlmr_multi_all_span2head_singletons_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_span2head_singletons_push_pop
}

train_xlmr_multi_all_heads = ${train_xlmr_multi_all}{
  final_path = ./output/final/xlmr-multi-heads
  heads_only = True
  max_training_sentences = 8
  ffnn_size = 1000
  num_epochs = 12
  eval_frequency = 10000
}

eval_xlmr_multi_all_heads = ${train_xlmr_multi_all_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_heads
}

train_xlmr_multi_all_trees_heads = ${train_xlmr_multi_all_heads}{
  final_path = ./output/final/xlmr-multi-trees-heads
  use_trees = True
}

eval_xlmr_multi_all_trees_heads = ${train_xlmr_multi_all_trees_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_trees_heads
}

train_xlmr_multi_all_singletons_heads = ${train_xlmr_multi_all_heads}{
  final_path = ./output/final/xlmr-multi-singletons-heads
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
}

eval_xlmr_multi_all_singletons_heads = ${train_xlmr_multi_all_singletons_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_singletons_heads
}

train_xlmr_multi_all_trees_singletons_heads = ${train_xlmr_multi_all_singletons_heads}{
  final_path = ./output/final/xlmr-multi-trees-singletons-heads
  use_trees = True
}

eval_xlmr_multi_all_trees_singletons_heads = ${train_xlmr_multi_all_trees_singletons_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_xlmr_multi_all_trees_singletons_heads
}



train_monoling_czech = ${train_mbert_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/monoling/
  bert_tokenizer_name = fav-kky/FERNET-C5
  bert_pretrained_name_or_path = fav-kky/FERNET-C5
}

train_monoling_czech-pcedt = ${train_mbert_czech-pcedt}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/monoling/
  bert_tokenizer_name = fav-kky/FERNET-C5
  bert_pretrained_name_or_path = fav-kky/FERNET-C5
}

train_monoling_russian = ${train_mbert_russian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/monoling/
  bert_tokenizer_name = DeepPavlov/rubert-base-cased
  bert_pretrained_name_or_path = DeepPavlov/rubert-base-cased
}

train_monoling_polish = ${train_xlmr_polish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/monoling/
  bert_tokenizer_name = allegro/herbert-large-cased
  bert_pretrained_name_or_path = allegro/herbert-large-cased
}

train_monoling_spanish = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/monoling/
  bert_tokenizer_name = PlanTL-GOB-ES/roberta-large-bne
  bert_pretrained_name_or_path = PlanTL-GOB-ES/roberta-large-bne
}

train_monoling_catalan = ${train_mbert_catalan}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/monoling/
  bert_tokenizer_name = PlanTL-GOB-ES/roberta-base-ca
  bert_pretrained_name_or_path = PlanTL-GOB-ES/roberta-base-ca
}

train_monoling_german = ${train_xlmr_german}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/monoling/
  bert_tokenizer_name = deepset/gbert-large
  bert_pretrained_name_or_path = deepset/gbert-large
}

train_monoling_german-parcor = ${train_mbert_german-parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/monoling/
  bert_tokenizer_name = deepset/gbert-base
  bert_pretrained_name_or_path = deepset/gbert-base
}

train_monoling_french = ${train_xlmr_french}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/monoling/
  bert_tokenizer_name = camembert/camembert-large
  bert_pretrained_name_or_path = camembert/camembert-large
}

train_monoling_hungarian-korkor = ${train_mbert_hungarian-korkor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/rembert/
  bert_tokenizer_name = SZTAKI-HLT/hubert-base-cc
  bert_pretrained_name_or_path = SZTAKI-HLT/hubert-base-cc
}

train_monoling_hungarian = ${train_mbert_hungarian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/monoling/
  bert_tokenizer_name = SZTAKI-HLT/hubert-base-cc
  bert_pretrained_name_or_path = SZTAKI-HLT/hubert-base-cc
}

train_monoling_lithuanian = ${train_mbert_lithuanian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/monoling/
  bert_tokenizer_name = EMBEDDIA/litlat-bert
  bert_pretrained_name_or_path = EMBEDDIA/litlat-bert
}

train_monoling_english-gum = ${train_xlmr_english-gum}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/monoling/
  bert_tokenizer_name = roberta-large
  bert_pretrained_name_or_path = roberta-large
}

train_monoling_multi_english = ${train_monoling_english-gum}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-English/monoling/
  language = en_all-corefud
  num_docs = 49
  num_epochs = 20
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu
}

train_monoling_english-gum_from_english = ${train_monoling_english-gum}{
  load_model_from_exp = train_monoling_multi_english
  num_epochs = 250
}

train_monoling_english-parcor = ${train_xlmr_english-parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/monoling/
  bert_tokenizer_name = roberta-large
  bert_pretrained_name_or_path = roberta-large
}

train_monoling_english-parcor_from_english = ${train_monoling_english-parcor}{
  load_model_from_exp = train_monoling_multi_english
  num_epochs = 1000
}

train_monoling_english-onto = ${train_xlmr_english-onto}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-OntoNotes/monoling/
  bert_tokenizer_name = roberta-large
  bert_pretrained_name_or_path = roberta-large
}

train_monoling_turkish = ${train_mbert_turkish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/monoling/
  bert_tokenizer_name = dbmdz/electra-base-turkish-cased-discriminator
  bert_pretrained_name_or_path = dbmdz/electra-base-turkish-cased-discriminator
}

train_monoling_norwegian-bokmaal = ${train_xlmr_norwegian-bokmaal}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/monoling/
  bert_tokenizer_name = ltg/norbert3-large
  bert_pretrained_name_or_path = ltg/norbert3-large
}

train_monoling_norwegian-nynorsk = ${train_xlmr_norwegian-nynorsk}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/monoling/
  bert_tokenizer_name = ltg/norbert3-large
  bert_pretrained_name_or_path = ltg/norbert3-large
}



train_rembert_czech = ${train_xlmr_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_czech_from_joined = ${train_rembert_czech}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 15
  evaluate_first = True
}

train_rembert_czech-pcedt = ${train_mbert_czech-pcedt}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_czech-pcedt_from_joined = ${train_rembert_czech-pcedt}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 15
  evaluate_first = True
}

train_rembert_multi_czech = ${train_xlmr_multi_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Czech/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_russian = ${train_mbert_russian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_russian_from_joined = ${train_rembert_russian}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 200
  evaluate_first = True
}

train_rembert_polish = ${train_xlmr_polish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_polish_from_joined = ${train_rembert_polish}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 30
  evaluate_first = True
}

train_rembert_multi_slavic = ${train_xlmr_multi_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Slavic/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_multi_all = ${train_xlmr_multi_all}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/rembert/
  eval_frequency = 10000
  max_training_sentences = 5
  final_path = ./output/final/rembert-multi
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

eval_rembert_multi_all = ${train_rembert_multi_all}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all
}

train_rembert_multi_all_trees = ${train_rembert_multi_all}{
  final_path = ./output/final/rembert-multi-trees
  use_trees = True
}

eval_rembert_multi_all_trees = ${train_rembert_multi_all_trees}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_trees
}

train_rembert_multi_all_span2head = ${train_rembert_multi_all}{
  final_path = ./output/final/rembert-multi-span2head
  use_trees = True
  span2head = True
  span2head_binary = True
}

eval_rembert_multi_all_span2head = ${train_rembert_multi_all_span2head}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_span2head
}

train_rembert_multi_all_singletons = ${train_rembert_multi_all}{
  final_path = ./output/final/rembert-multi-singletons
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
}

eval_rembert_multi_all_singletons = ${train_rembert_multi_all_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_singletons
}

train_rembert_multi_all_trees_singletons = ${train_rembert_multi_all_singletons}{
  final_path = ./output/final/rembert-multi-trees-singletons
  use_trees = True
}

eval_rembert_multi_all_trees_singletons = ${train_rembert_multi_all_trees_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_trees_singletons
}

train_rembert_multi_all_span2head_singletons = ${train_rembert_multi_all_singletons}{
  final_path = ./output/final/rembert-multi-span2head-singletons
  use_trees = True
  span2head = True
  span2head_binary = True
  max_training_sentences = 4
}

eval_rembert_multi_all_span2head_singletons = ${train_rembert_multi_all_span2head_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_span2head_singletons
}



train_rembert_multi_all_push_pop = ${train_rembert_multi_all}{
  final_path = ./output/final/xlmr-multi-push-pop
  max_training_sentences = 4
  use_push_pop_detection = True
  num_epochs = 8
}

eval_rembert_multi_all_push_pop = ${train_rembert_multi_all_span2head}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_push_pop
}

train_rembert_multi_all_trees_push_pop = ${train_rembert_multi_all}{
  final_path = ./output/final/xlmr-multi-trees-push-pop
  max_training_sentences = 4
  use_trees = True
  use_push_pop_detection = True
  num_epochs = 8
}

eval_rembert_multi_all_trees_push_pop = ${train_rembert_multi_all_trees_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_trees_push_pop
}

train_rembert_multi_all_span2head_push_pop = ${train_rembert_multi_all}{
  max_training_sentences = 3
  num_epochs = 8
  final_path = ./output/final/xlmr-multi-span2head-push-pop
  use_trees = True
  span2head = True
  span2head_binary = True
  use_push_pop_detection = True
}

eval_rembert_multi_all_span2head_push_pop = ${train_rembert_multi_all_span2head_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_span2head_push_pop
}

train_rembert_multi_all_singletons_push_pop = ${train_rembert_multi_all}{
  max_training_sentences = 3
  num_epochs = 6
  final_path = ./output/final/xlmr-multi-singletons-push-pop
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_push_pop_detection = True
}

eval_rembert_multi_all_singletons_push_pop = ${train_rembert_multi_all_singletons_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_singletons_push_pop
}

train_rembert_multi_all_trees_singletons_push_pop = ${train_rembert_multi_all_singletons_push_pop}{
  max_training_sentences = 3
  num_epochs = 6
  final_path = ./output/final/xlmr-multi-trees-singletons-push-pop
  use_trees = True
}

eval_rembert_multi_all_trees_singletons_push_pop = ${train_rembert_multi_all_trees_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_trees_singletons_push_pop
}

train_rembert_multi_all_span2head_singletons_push_pop = ${train_rembert_multi_all_singletons_push_pop}{
  max_training_sentences = 3
  num_epochs = 6
  final_path = ./output/final/xlmr-multi-span2head-singletons-push-pop
  use_trees = True
  span2head = True
  span2head_binary = True
}

eval_rembert_multi_all_span2head_singletons_push_pop = ${train_rembert_multi_all_span2head_singletons_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_span2head_singletons_push_pop
}

train_rembert_multi_all_heads = ${train_rembert_multi_all}{
  final_path = ./output/final/rembert-multi-heads
  heads_only = True
  max_training_sentences = 8
  ffnn_size = 1000
  num_epochs = 15
  eval_frequency = 10000
}

eval_rembert_multi_all_heads = ${train_rembert_multi_all_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_heads
}

train_rembert_multi_all_trees_heads = ${train_rembert_multi_all_heads}{
  final_path = ./output/final/rembert-multi-trees-heads
  use_trees = True
}

eval_rembert_multi_all_trees_heads = ${train_rembert_multi_all_trees_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_trees_heads
}

train_rembert_multi_all_singletons_heads = ${train_rembert_multi_all_heads}{
  final_path = ./output/final/rembert-multi-singletons-heads
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
}

eval_rembert_multi_all_singletons_heads = ${train_rembert_multi_all_singletons_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_singletons_heads
}

train_rembert_multi_all_trees_singletons_heads = ${train_rembert_multi_all_singletons_heads}{
  final_path = ./output/final/rembert-multi-trees-singletons-heads
  use_trees = True
}

eval_rembert_multi_all_trees_singletons_heads = ${train_rembert_multi_all_trees_singletons_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_rembert_multi_all_trees_singletons_heads
}


train_rembert_spanish = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_spanish_from_joined = ${train_rembert_spanish}{
  load_model_from_exp = train_rembert_multi_all
  max_training_sentences = 4
  num_epochs = 30
  evaluate_first = True
}

train_rembert_catalan = ${train_mbert_catalan}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_catalan_from_joined = ${train_rembert_catalan}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 30
  evaluate_first = True
}

train_rembert_multi_ancora = ${train_xlmr_multi_ancora}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-AnCora/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_german = ${train_xlmr_german}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_german_from_joined = ${train_rembert_german}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 500
  evaluate_first = True
}

train_rembert_german-parcor = ${train_mbert_german-parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_german-parcor_from_joined = ${train_rembert_german-parcor}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 1000
  evaluate_first = True
}

train_rembert_multi_german = ${train_xlmr_multi_german}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-German/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_french = ${train_xlmr_french}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_french_from_joined = ${train_rembert_french}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 500
  evaluate_first = True
}

train_rembert_hungarian-korkor = ${train_mbert_hungarian-korkor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_hungarian-korkor_from_joined = ${train_rembert_hungarian-korkor}{
  load_model_from_exp = train_rembert_multi_all
  evaluate_first = True
}

train_rembert_hungarian = ${train_mbert_hungarian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_hungarian_from_joined = ${train_rembert_hungarian}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 100
  evaluate_first = True
}

train_rembert_multi_hungarian = ${train_xlmr_multi_hungarian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Hungarian/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_lithuanian = ${train_mbert_lithuanian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_lithuanian_from_joined = ${train_rembert_lithuanian}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 500
  evaluate_first = True
}

train_rembert_english-gum = ${train_xlmr_english-gum}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_english-gum_from_joined = ${train_rembert_english-gum}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 150
  evaluate_first = True
}

train_rembert_english-gum_from_english = ${train_rembert_english-gum}{
  load_model_from_exp = train_rembert_multi_english
  num_epochs = 250
  evaluate_first = True
}

train_rembert_english-parcor = ${train_xlmr_english-parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_english-parcor_from_english = ${train_rembert_english-parcor}{
  load_model_from_exp = train_rembert_multi_english
  num_epochs = 1000
  evaluate_first = True
}

train_rembert_english-parcor_from_joined = ${train_rembert_english-parcor}{
  load_model_from_exp = train_rembert_multi_all
  num_epochs = 400
  evaluate_first = True
}

train_rembert_english-onto = ${train_xlmr_english-onto}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-OntoNotes/rembert/
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_multi_english = ${train_xlmr_multi_english}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-English/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_turkish = ${train_xlmr_turkish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_turkish_from_joined = ${train_rembert_turkish}{
  load_model_from_exp = train_rembert_multi_all
  evaluate_first = True
}

train_rembert_norwegian-bokmaal = ${train_xlmr_norwegian-bokmaal}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_norwegian-bokmaal_from_joined = ${train_rembert_norwegian-bokmaal}{
  load_model_from_exp = train_rembert_multi_all
  evaluate_first = True
}

train_rembert_norwegian-nynorsk = ${train_xlmr_norwegian-nynorsk}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_norwegian-nynorsk_from_joined = ${train_rembert_norwegian-nynorsk}{
  load_model_from_exp = train_rembert_multi_all
  evaluate_first = True
}

train_rembert_multi_norwegian = ${train_xlmr_multi_norwegian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Norwegian/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}

train_rembert_multi_parcor = ${train_xlmr_multi_parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-ParCorFull/rembert/
  max_training_sentences = 4
  bert_tokenizer_name = google/rembert
  bert_pretrained_name_or_path = google/rembert
}




train_mt5_czech = ${train_xlmr_czech}{
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-3
  task_learning_rate = 1e-3
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/mt5/
  eval_frequency = 10000
}

train_mt5_czech-pcedt = ${train_xlmr_czech-pcedt}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
  eval_frequency = 10000
}

train_mt5_czech-pcedt_from_joined = ${train_mt5_czech-pcedt}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 15
}

train_mt5_multi_czech = ${train_xlmr_multi_czech}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Czech/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
}

train_mt5_russian = ${train_mbert_russian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_russian_from_joined = ${train_mt5_russian}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 200
}

train_mt5_polish = ${train_xlmr_polish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_polish_from_joined = ${train_mt5_polish}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 30
}

train_mt5_multi_slavic = ${train_xlmr_multi_slavic}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-Slavic/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_multi_all = ${train_xlmr_multi_all}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = False
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
  num_epochs = 8
}

eval_mt5_multi_all = ${train_mt5_multi_all}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all
}

train_mt5_multi_all_trees = ${train_mt5_multi_all}{
  final_path = ./output/final/mt5-multi-trees
  use_trees = True
}

eval_mt5_multi_all_trees = ${train_mt5_multi_all_trees}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_trees
}

train_mt5_multi_all_span2head = ${train_mt5_multi_all}{
  final_path = ./output/final/mt5-multi-span2head
  use_trees = True
  span2head = True
  span2head_binary = True
}

eval_mt5_multi_all_span2head = ${train_mt5_multi_all_span2head}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_span2head
}

train_mt5_multi_all_singletons = ${train_mt5_multi_all}{
  final_path = ./output/final/mt5-multi-singletons
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
}

eval_mt5_multi_all_singletons = ${train_mt5_multi_all_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_singletons
}

train_mt5_multi_all_trees_singletons = ${train_mt5_multi_all_singletons}{
  final_path = ./output/final/mt5-multi-trees-singletons
  use_trees = True
}

eval_mt5_multi_all_trees_singletons = ${train_mt5_multi_all_trees_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_trees_singletons
}

train_mt5_multi_all_span2head_singletons = ${train_mt5_multi_all_singletons}{
  final_path = ./output/final/mt5-multi-span2head-singletons
  use_trees = True
  span2head = True
  span2head_binary = True
  max_training_sentences = 4
}

eval_mt5_multi_all_span2head_singletons = ${train_mt5_multi_all_span2head_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_span2head_singletons
}



train_mt5_multi_all_push_pop = ${train_mt5_multi_all}{
  final_path = ./output/final/xlmr-multi-push-pop
  max_training_sentences = 4
  use_push_pop_detection = True
  num_epochs = 8
}

eval_mt5_multi_all_push_pop = ${train_mt5_multi_all_span2head}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_push_pop
}

train_mt5_multi_all_trees_push_pop = ${train_mt5_multi_all}{
  final_path = ./output/final/xlmr-multi-trees-push-pop
  max_training_sentences = 4
  use_trees = True
  use_push_pop_detection = True
  num_epochs = 5
}

eval_mt5_multi_all_trees_push_pop = ${train_mt5_multi_all_trees_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_trees_push_pop
}

train_mt5_multi_all_span2head_push_pop = ${train_mt5_multi_all}{
  max_training_sentences = 3
  num_epochs = 5
  final_path = ./output/final/xlmr-multi-span2head-push-pop
  use_trees = True
  span2head = True
  span2head_binary = True
  use_push_pop_detection = True
}

eval_mt5_multi_all_span2head_push_pop = ${train_mt5_multi_all_span2head_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_span2head_push_pop
}

train_mt5_multi_all_singletons_push_pop = ${train_mt5_multi_all}{
  max_training_sentences = 3
  num_epochs = 4
  final_path = ./output/final/xlmr-multi-singletons-push-pop
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_push_pop_detection = True
}

eval_mt5_multi_all_singletons_push_pop = ${train_mt5_multi_all_singletons_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_singletons_push_pop
}

train_mt5_multi_all_trees_singletons_push_pop = ${train_mt5_multi_all_singletons_push_pop}{
  max_training_sentences = 3
  num_epochs = 4
  final_path = ./output/final/xlmr-multi-trees-singletons-push-pop
  use_trees = True
}

eval_mt5_multi_all_trees_singletons_push_pop = ${train_mt5_multi_all_trees_singletons}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_trees_singletons_push_pop
}

train_mt5_multi_all_span2head_singletons_push_pop = ${train_mt5_multi_all_singletons_push_pop}{
  max_training_sentences = 4
  num_epochs = 4
  final_path = ./output/final/xlmr-multi-span2head-singletons-push-pop
  use_trees = True
  span2head = True
  span2head_binary = True
}

eval_mt5_multi_all_span2head_singletons_push_pop = ${train_mt5_multi_all_span2head_singletons_push_pop}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_span2head_singletons_push_pop
}

train_mt5_multi_all_heads = ${train_mt5_multi_all}{
  final_path = ./output/final/mt5-multi-heads
  heads_only = True
  max_training_sentences = 8
  ffnn_size = 1000
  num_epochs = 15
  eval_frequency = 10000
}

eval_mt5_multi_all_heads = ${train_mt5_multi_all_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_heads
}

train_mt5_multi_all_trees_heads = ${train_mt5_multi_all_heads}{
  final_path = ./output/final/mt5-multi-trees-heads
  use_trees = True
}

eval_mt5_multi_all_trees_heads = ${train_mt5_multi_all_trees_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_trees_heads
}

train_mt5_multi_all_singletons_heads = ${train_mt5_multi_all_heads}{
  final_path = ./output/final/mt5-multi-singletons-heads
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
}

eval_mt5_multi_all_singletons_heads = ${train_mt5_multi_all_singletons_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_singletons_heads
}

train_mt5_multi_all_trees_singletons_heads = ${train_mt5_multi_all_singletons_heads}{
  final_path = ./output/final/mt5-multi-trees-singletons-heads
  use_trees = True
}

eval_mt5_multi_all_trees_singletons_heads = ${train_mt5_multi_all_trees_singletons_heads}{
  conll_eval_path = [./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PCEDT/cs_pcedt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Czech-PDT/cs_pdt-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Russian-RuCor/ru_rucor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Polish-PCC/pl_pcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/ca_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/es_ancora-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/de_potsdamcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/de_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/fr_democrat-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/hu_korkor-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/hu_szegedkoref-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/lt_lcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/en_gum-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/tr_itcc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/no_bokmaalnarc-corefud-dev.conllu, ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/no_nynorsknarc-corefud-dev.conllu]
  load_model_from_exp = train_mt5_multi_all_trees_singletons_heads
}

train_mt5_spanish = ${train_xlmr_spanish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Spanish-AnCora/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_spanish_from_joined = ${train_mt5_spanish}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 30
}

train_mt5_catalan = ${train_mbert_catalan}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Catalan-AnCora/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_catalan_from_joined = ${train_mt5_catalan}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 30
}

train_mt5_german = ${train_xlmr_german}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-PotsdamCC/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 4
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_german_from_joined = ${train_mt5_german}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 500
}

train_mt5_german-parcor = ${train_mbert_german-parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_German-ParCorFull/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_german-parcor_from_joined = ${train_mt5_german-parcor}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 1000
}

train_mt5_french = ${train_xlmr_french}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_French-Democrat/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-5
  task_learning_rate = 1e-5
}

train_mt5_french_from_joined = ${train_mt5_french}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 500
}

train_mt5_hungarian-korkor = ${train_mbert_hungarian-korkor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-KorKor/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_xlmr_hungarian-korkor_from_joined = ${train_xlmr_hungarian-korkor}{
  load_model_from_exp = train_mt5_multi_all
}

train_mt5_hungarian = ${train_mbert_hungarian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Hungarian-SzegedKoref/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_hungarian_from_joined = ${train_mt5_hungarian}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 100
}

train_mt5_lithuanian = ${train_mbert_lithuanian}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Lithuanian-LCC/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_lithuanian_from_joined = ${train_mt5_lithuanian}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 500
}

train_mt5_english-gum = ${train_xlmr_english-gum}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-GUM/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_english-gum_from_joined = ${train_mt5_english-gum}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 150
}

train_mt5_multi_english = ${train_mt5_english-gum}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-English/mt5/
  language = en_all-corefud
  num_docs = 49
  num_epochs = 20
  conll_eval_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu
  conll_test_path = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/en_parcorfull-corefud-dev.conllu
}

train_mt5_english-gum_from_english = ${train_mt5_english-gum}{
  load_model_from_exp = train_mt5_multi_english
  num_epochs = 250
}

train_mt5_english-parcor = ${train_xlmr_english-parcor}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-ParCorFull/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_english-parcor_from_english = ${train_mt5_english-parcor}{
  load_model_from_exp = train_mt5_multi_english
  num_epochs = 1000
}

train_mt5_english-parcor_from_joined = ${train_mt5_english-parcor}{
  load_model_from_exp = train_mt5_multi_all
  num_epochs = 400
}

train_mt5_english-onto = ${train_xlmr_english-onto}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_English-OntoNotes/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
}

train_mt5_turkish = ${train_xlmr_turkish}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Turkish-ITCC/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_turkish_from_joined = ${train_mt5_turkish}{
  load_model_from_exp = train_mt5_multi_all
}

train_mt5_norwegian-bokmaal = ${train_xlmr_norwegian-bokmaal}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-BokmaalNARC/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_norwegian-bokmaal_from_joined = ${train_mt5_norwegian-bokmaal}{
  load_model_from_exp = train_mt5_multi_all
}

train_mt5_norwegian-nynorsk = ${train_xlmr_norwegian-nynorsk}{
  data_dir = ./data/UD/CorefUD-1.1-test-final/data/CorefUD_Norwegian-NynorskNARC/mt5/
  max_train_segment_len = 256
  max_segment_len = 4096
  max_segments = 1
  max_training_sentences = 6
  max_pred_sentences = 1
  bert_tokenizer_name = google/mt5-xxl
  bert_pretrained_name_or_path = google/mt5-xxl
  # pipeline_parallel = True
  # bert_device = 1
  # PEFT
  use_half_precision = True
  use_SGD = False
  use_LORA = True
  use_int8 = False
  bert_learning_rate = 1e-4
  task_learning_rate = 1e-4
}

train_mt5_norwegian-nynorsk_from_joined = ${train_mt5_norwegian-nynorsk}{
  load_model_from_exp = train_mt5_multi_all
}





train_best_czech = ${train_rembert_czech_from_joined}{
  # span2head = True
  # span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_rembert_multi_all_trees_singletons_heads
}

eval_best_czech = ${train_best_czech}{
  # load_model_from_exp = train_xlmr_czech_from_joined
  # model_suffix = Aug12_03-52-40_37000
  load_model_from_exp = train_best_czech
}

train_best_czech-pcedt = ${train_rembert_czech-pcedt_from_joined}{
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  # heads_only = True
  load_model_from_exp = train_rembert_multi_all_trees_singletons
}

eval_best_czech-pcedt = ${train_best_czech-pcedt}{
  # load_model_from_exp = train_xlmr_czech-pcedt_from_joined
  model_suffix = 24Feb06_11-19-47
  load_model_from_exp = train_best_czech-pcedt
}

train_best_russian = ${train_rembert_russian_from_joined}{
  # span2head = True
  # span2head_binary = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_rembert_multi_all_trees_heads
}

eval_best_russian = ${train_best_russian}{
  # load_model_from_exp = train_xlmr_russian_from_joined
  # model_suffix = Aug11_22-23-11_7000
  load_model_from_exp = train_best_russian
}

train_best_polish = ${train_xlmr_polish_from_joined}{
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_xlmr_multi_all_trees_singletons_heads
}

eval_best_polish = ${train_best_polish}{
  # load_model_from_exp = train_xlmr_polish_from_joined
  # model_suffix = Aug12_04-06-29_35000
  load_model_from_exp = train_best_polish
}

train_best_spanish = ${train_rembert_spanish_from_joined}{
  # span2head = True
  # span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_rembert_multi_all_trees_singletons_heads
}

eval_best_spanish = ${train_best_spanish}{
  # load_model_from_exp = train_xlmr_spanish_from_joined
  # model_suffix = Aug12_04-31-30_36000
  load_model_from_exp = train_best_spanish
}

train_best_catalan = ${train_rembert_catalan_from_joined}{
  # span2head = True
  # span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_rembert_multi_all_trees_singletons_heads
}

eval_best_catalan = ${train_best_catalan}{
  # load_model_from_exp = train_xlmr_catalan_from_joined
  # model_suffix = Aug12_04-40-27_20000
  load_model_from_exp = train_best_catalan
}

train_best_german = ${train_xlmr_german_from_joined}{
  # span2head = True
  # span2head_binary = True
  # model_singletons = True
  # mask_singleton_binary_score = True
  # separate_singletons = True
  # model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_xlmr_multi_all_trees_heads
}

eval_best_german = ${train_best_german}{
  # load_model_from_exp = train_xlmr_german_from_joined
  model_suffix = 24Feb06_01-17-44
  load_model_from_exp = train_best_german
}

train_best_german-parcor = ${train_xlmr_german-parcor_from_joined}{
  # span2head = True
  # span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_xlmr_multi_all_trees_singletons_heads
}

eval_best_german-parcor = ${train_best_german-parcor}{
  # load_model_from_exp = train_xlmr_german-parcor_from_joined
  model_suffix = 24Feb05_15-36-53
  load_model_from_exp = train_best_german-parcor
}

train_best_french = ${train_rembert_french_from_joined}{
  # span2head = True
  # span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  bert_dropout_rate = 0.1
  load_model_from_exp = train_rembert_multi_all_trees_singletons_heads
}

eval_best_french = ${train_best_french}{
  # load_model_from_exp = train_xlmr_french_from_joined
  # model_suffix = Aug12_12-01-21_5000
  load_model_from_exp = train_best_french
}

train_best_hungarian = ${train_xlmr_hungarian_from_joined}{
  # span2head = True
  # span2head_binary = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_xlmr_multi_all_trees_heads
}

eval_best_hungarian = ${train_best_hungarian}{
  # load_model_from_exp = train_xlmr_hungarian_from_joined
  # model_suffix = Aug12_00-19-04_29000
  load_model_from_exp = train_best_hungarian
}

train_best_hungarian-korkor = ${train_xlmr_hungarian-korkor_from_joined}{
  # span2head = True
  # span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_xlmr_multi_all_trees_singletons_heads
}

eval_best_hungarian-korkor = ${train_best_hungarian-korkor}{
  # load_model_from_exp = train_xlmr_hungarian-korkor_from_joined
  # model_suffix = Aug12_00-19-04_29000
  load_model_from_exp = train_best_hungarian-korkor
}

train_best_lithuanian = ${train_xlmr_lithuanian}{
  span2head = True
  span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  max_training_sentences = 3
  load_model_from_exp = train_xlmr_multi_all_span2head_singletons_push_pop
}

eval_best_lithuanian = ${train_best_lithuanian}{
  # load_model_from_exp = train_monoling_lithuanian
  model_suffix = 24Feb02_15-18-08
  load_model_from_exp = train_best_lithuanian
}

train_best_english-gum = ${train_xlmr_english-gum_from_joined}{
  span2head = True
  span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  load_model_from_exp = train_xlmr_multi_all_span2head_singletons
}

eval_best_english-gum = ${train_best_english-gum}{
  # load_model_from_exp = train_xlmr_english-gum_from_joined
  model_suffix = 24Feb06_05-01-07
  load_model_from_exp = train_best_english-gum
}

train_best_english-parcor = ${train_xlmr_english-parcor_from_joined}{
  span2head = True
  span2head_binary = True
  use_trees = True
  load_model_from_exp = train_xlmr_multi_all_span2head
}

eval_best_english-parcor = ${train_best_english-parcor}{
  # load_model_from_exp = train_xlmr_english-parcor_from_joined
  # model_suffix = 24Feb08_01-16-15
  model_suffix = 24Feb05_18-04-44
  load_model_from_exp = train_best_english-parcor
}

train_best_turkish = ${train_xlmr_turkish_from_joined}{
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  load_model_from_exp = train_xlmr_multi_all_singletons
}

eval_best_turkish = ${train_best_turkish}{
  # load_model_from_exp = train_xlmr_turkish_from_joined
  model_suffix = 24Feb06_05-08-46
  load_model_from_exp = train_best_turkish
}

train_best_norwegian-nynorsk = ${train_xlmr_norwegian-nynorsk_from_joined}{
  # span2head = True
  # span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_xlmr_multi_all_trees_singletons_heads
}

eval_best_norwegian-nynorsk = ${train_best_norwegian-nynorsk}{
  # load_model_from_exp = train_xlmr_norwegian-nynorsk_from_joined
  # model_suffix = 24Feb06_05-08-46
  load_model_from_exp = train_best_norwegian-nynorsk
}

train_best_norwegian-bokmaal = ${train_xlmr_norwegian-bokmaal_from_joined}{
  # span2head = True
  # span2head_binary = True
  model_singletons = True
  mask_singleton_binary_score = True
  separate_singletons = True
  model_mentions = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_xlmr_multi_all_trees_singletons_heads
}

eval_best_norwegian-bokmaal = ${train_best_norwegian-bokmaal}{
  # load_model_from_exp = train_xlmr_norwegian-bokmaal_from_joined
  # model_suffix = 24Feb06_05-08-46
  load_model_from_exp = train_best_norwegian-bokmaal
}


train_best_czech_zero_shot = ${train_best_czech}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/rembert/
  num_epochs = 10
}

train_best_czech-pcedt_zero_shot = ${train_best_czech-pcedt}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/rembert/
  num_epochs = 10
}

train_best_russian_zero_shot = ${train_best_russian}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/rembert/
  num_epochs = 10
}

train_best_polish_zero_shot = ${train_best_polish}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_french_zero_shot = ${train_best_french}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/rembert/
  num_epochs = 10
}

train_best_german_zero_shot = ${train_best_german}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_german-parcor_zero_shot = ${train_best_german-parcor}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_spanish_zero_shot = ${train_best_spanish}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/rembert/
  num_epochs = 10
}

train_best_catalan_zero_shot = ${train_best_catalan}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/rembert/
  num_epochs = 10
}

train_best_hungarian_zero_shot = ${train_best_hungarian}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_hungarian-korkor_zero_shot = ${train_best_hungarian-korkor}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_lithuanian_zero_shot = ${train_best_lithuanian}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_english-gum_zero_shot = ${train_best_english-gum}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_english-parcor_zero_shot = ${train_best_english-parcor}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_turkish_zero_shot = ${train_best_turkish}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_norwegian-bokmaal_zero_shot = ${train_best_norwegian-bokmaal}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}

train_best_norwegian-nynorsk_zero_shot = ${train_best_norwegian-nynorsk}{
  load_model_from_exp = False
  zero_shot = True
  joined_data_dir = ./data/UD/CorefUD-1.1-test-final/data/Joined-all/xlmr/
  num_epochs = 10
}





train_best_xxl_russian = ${train_mt5_russian_from_joined}{
  # span2head = True
  # span2head_binary = True
  use_trees = True
  heads_only = True
  load_model_from_exp = train_mt5_multi_all_trees_heads
}
